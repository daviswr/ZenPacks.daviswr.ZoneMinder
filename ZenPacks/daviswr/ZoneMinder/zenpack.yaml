name: ZenPacks.daviswr.ZoneMinder

class_relationships:
  - Products.ZenModel.Device.Device(zoneMinder) 1:MC ZoneMinder(server)
  - ZoneMinder(zmMonitors) 1:MC ZMMonitor(zoneMinder)
  - ZoneMinder(zmStorage) 1:MC ZMStorage(zoneMinder)
# These relationships may be supported in a future release
#  - ZoneMinder(zmServers) 1:MC ZMServer(zoneMinder)

classes:
  DEFAULTS:
    base: [zenpacklib.Component]

  ZoneMinder:
    label: ZoneMinder Daemon
    plural_label: ZoneMinder Daemon
    short_label: ZM Daemon
    plural_short_label: ZM Daemon
    relationships:
      zmStorage:
        grid_display: false
        details_display: false
      # zmServers:
      #   grid_display: false
      #   details_display: false
    properties:
      DEFAULTS:
        type: string
        grid_display: false
      url:
         label: URL
         grid_display: true
         order: 1
         label_width: 250
      version:
        label: Version
        grid_display: true
        order: 2
        label_width: 50
      apiversion:
        label: API Version
        order: 13
      # What the effective current version of ZoneMinder is,
      # might be different from actual if versions ignored
      ZmDynCurrVersion:
        label: Effective Version
        order: 11
      # What the version of the database is, from zmupdate
      ZmDynDbVersion:
        label: Database Version
        order: 12
      # The email address to send matching event details to
      ZmEmailAddress:
        label: Email Address
        order: 14
      # Is the ffmpeg video encoder/decoder installed
      ZmOptFfmpeg:
        label: FFmpeg Support
        short_label: FFmpeg
        type: boolean
        default: false
        details_display: true
        label_width: 40
        order: 16
      # Maximum number of log entries to retain
      ZmLogDatabaseLimit:
        label: Log Database Limit
        default: 7 day
        order: 15
      # enables a frame server daemon (zmf)
      # which will be sent the images from the analysis daemon
      # No longer a config option as of 1.32
      ZmOptFrameServer:
        label: Frame Server
        short_label: ZMF
        type: boolean
        default: false
        details_display: false
        label_width: 30
        order: 99
      # Support controllable (e.g. PTZ) cameras
      ZmOptControl:
        label: PTZ Support
        short_label: PTZ
        type: boolean
        default: false
        details_display: true
        label_width: 30
        order: 17
      # Enable 3rd party Event Notification Server
      ZmOptUseEventnotification:
        label: Event Server
        short_label: ES
        type: boolean
        default: false
        details_display: true
        label_width: 30
        order: 20


  ZMMonitor:
    label: ZoneMinder Monitor
    short_label: ZM Monitor
    relationships:
      zoneMinder:
        grid_display: false
        details_display: false
    properties:
      DEFAULTS:
        type: string
        grid_display: false
      ServerId:
        label: Server ID
        type: int
        default: 0
        details_display: false
      MonitorType:
        label: Type
        order : 9
      Function:
        grid_display: true
        order: 8
      Enabled:
        type: boolean
        default: false
        enum: {true: "clear", false: "critical"}
        renderer: Zenoss.render.severity
        grid_display: true
        details_display: false
        label_width: 45
        order: 2
      Protocol:
        order: 6
      Method:
        order: 7
      Host:
        grid_display: true
        order: 3
      Port:
        type: int
        order: 4
      Path:
        # Will have to remove passwords from URL
        # May have to assemble with Host and Port depending on format
        label: URL
        order: 5
      Resolution:
        # Assembled from Width and Height attributes
        details_display: true
        order: 10
      Width:
        type: int
        details_display: false
      Height:
        type: int
        details_display: false
      Color:
        label: Color Depth
        short_label: Colors
        order: 11
      Controllable:
        label: PTZ Controls
        short_label: PTZ
        type: boolean
        default: false
        details_display: false
      ControlId:
        label: PTZ Type
        order: 16
      MaxFPS:
        label: Max FPS
        type: float
        order: 14
      AlarmMaxFPS:
        label: Alarm Max FPS
        type: float
        details_display: false
      # Deprecated: Will remove from ZenPack before 1.0
      CaptureFPS:
        label: Capture FPS
        type: float
        details_display: false
      # Deprecated: Will remove from ZenPack before 1.0
      AnalysisFPS:
        label: Analysis FPS
        type: float
        details_display: false


  ZMStorage:
    label: ZoneMinder Storage
    short_label: ZM Storage
    plural_label: ZoneMinder Storage
    plural_short_label: ZM Storage
    relationships:
      zoneMinder:
        grid_display: false
        details_display: false
    properties:
      DEFAULTS:
        type: string
        grid_display: false
        details_display: true
      Path:
        label: Path
        grid_display: true
        order: 2
        label_width: 256
      StorageType:
        label: Type
        order: 10
      Url:
        label: URL
        details_display: false
        order: 11
      DiskSpace:
        # The API uses this to report space used by events,
        # but will be used here to represent the size of the volume
        label: Size
        type: int
        renderer: Zenoss.render.bytesString
        grid_display: true
        order: 5
      Scheme:
        label: Scheme
        order: 12
      ServerId:
        label: Server ID
        type: int
        default: 0
        details_display: false
        order: 13
      DoDelete:
        label: Do-Delete
        type: boolean
        details_display: false
        order: 14
      DiskUsed:
        label: Used
        type: int
        renderer: Zenoss.render.bytesString
        datapoint: Storage_used
        grid_display: true
        order: 6
      DiskEvents:
        label: Used by Events
        short_label: Events
        type: int
        renderer: Zenoss.render.bytesString
        datapoint: Storage_events
        grid_display: false
        order: 7
      DiskPercent:
        label: Percentage Used
        short_label: Percent
        type: int
        datapoint: Storage_percent
        grid_display: true
        label_width: 45
        order: 8


  # This relationships may be supported in a future release
  ZMServer:
    label: ZoneMinder Server
    short_label: ZM Server
    properties:
      DEFAULTS:
        grid_display: false
      Hostname:
        type: string
        grid_display: true
        order: 2
      Status:
        # Will need a way to dynamically update this
        type: string
        details_display: false
      zmstats:
        label: Stats
        type: boolean
        default: false
      zmaudit:
        label: Audit
        type: boolean
        default: false
      zmtrigger:
        label: Trigger
        type: boolean
        default: false


zProperties:
  DEFAULTS:
    category: ZoneMinder
  zZoneMinderUsername:
    type: string
  zZoneMinderPassword:
    type: password
  zZoneMinderHostname:
    type: string
  zZoneMinderPort:
    type: int
    default: 443
  zZoneMinderPath:
    type: string
    default: /zm/
  zZoneMinderSSL:
    type: boolean
    default: true
  zZoneMinderURL:
    type: string
  zZoneMinderIgnoreMonitorId:
    type: list
  zZoneMinderIgnoreMonitorName:
    type: string
  zZoneMinderIgnoreMonitorHostname:
    type: string
  zZoneMinderIgnoreStorageId:
    type: list
  zZoneMinderIgnoreStorageName:
    type: string
  zZoneMinderIgnoreStoragePath:
    type: string


device_classes:
  /:
    remove: false
    templates:
      ZoneMinderDaemon:
        targetPythonClass: ZenPacks.daviswr.ZoneMinder.ZoneMinder

        datasources:
          Daemon:
            type: Python
            plugin_classname: ZenPacks.daviswr.ZoneMinder.dsplugins.Daemon
            cycletime: 300
            datapoints:
              result: GAUGE
              load-1: GAUGE
              load-5: GAUGE
              load-15: GAUGE
              devshm: GAUGE
              state: GAUGE
              events: GAUGE
              bandwidth: GAUGE
              db-used: GAUGE
              db-max: GAUGE
              capturing: GAUGE

        thresholds:
          Daemon-Status:
            type: MinMaxThreshold
            minval: 1
            maxval: 1
            enabled: true
            dsnames:
              - Daemon_result
            severity: 4
            eventClass: /Status/ZoneMinder

          Daemon-RunState:
            type: ValueChangeThreshold
            enabled: true
            dsnames:
              - Daemon_state
            severity: 1
            eventClass: /Status/ZoneMinder

          Daemon-Capturing:
            type: MinMaxThreshold
            minval: 100
            enabled: true
            dsnames:
              - Daemon_capturing
            severity: 3
            eventClass: /Status/ZoneMinder

        graphs:
          DEFAULTS:
            miny: 0
          ZM Daemon Load:
            graphpoints:
              1-Minute Avg:
                dpName: Daemon_load-1
                lineType: AREA
                stacked: true
                colorindex: 0
              5-Minute Avg:
                dpName: Daemon_load-5
                lineType: LINE
                lineWidth: 2
                colorindex: 1
              15-Minute Avg:
                dpName: Daemon_load-15
                lineType: LINE
                lineWidth: 1
                colorindex: 2

          ZM Daemon Shared Memory:
            maxy: 100
            units: percentage
            graphpoints:
              Used:
                dpName: Daemon_devshm
                lineType: AREA
                stacked: TRUE
                colorindex: 0

          ZM Daemon Database Connections:
            units: connections
            graphpoints:
              Used:
                dpName: Daemon_db-used
                lineType: AREA
                stacked: TRUE
                colorindex: 0
              Available:
                dpName: Daemon_db-max
                rpn: Used,-,CEIL
                lineType: AREA
                stacked: TRUE
                color: cccccc

          ZM Daemon Total Bandwidth:
            units: bits/sec
            base: true
            graphpoints:
              Capturing:
                dpName: Daemon_bandwidth
                rpn: 8,*
                lineType: AREA
                stacked: true
                colorindex: 0

          ZM Daemon Capturing Monitors:
            maxy: 100
            units: percentage
            graphpoints:
              Monitors:
                dpName: Daemon_capturing
                lineType: LINE
                lineWidth: 2
                colorindex: 0

          ZM Daemon Total Events:
            units: events/min
            graphpoints:
              Events:
                dpName: Daemon_events
                rpn: CEIL
                lineType: LINE
                lineWidth: 2
                colorindex: 0


      ZoneMinderMonitor:
        targetPythonClass: ZenPacks.daviswr.ZoneMinder.ZMMonitor

        datasources:
          Monitor:
            type: Python
            plugin_classname: ZenPacks.daviswr.ZoneMinder.dsplugins.Monitor
            cycletime: 300
            datapoints:
              status: GAUGE
              events: GAUGE
              enabled: GAUGE
              online: GAUGE
              CaptureFPS: GAUGE
              AnalysisFPS: GAUGE
              CaptureBandwidth: GAUGE

        thresholds:
          Monitor-Status:
            type: MinMaxThreshold
            minval: 1
            maxval: 1
            enabled: true
            dsnames:
             - Monitor_status
            severity: 3
            eventClass: /Status/ZoneMinder

          Monitor-Enabled:
            type: MinMaxThreshold
            minval: 1
            maxval: 1
            enabled: true
            dsnames:
             - Monitor_enabled
            severity: 3
            eventClass: /Status/ZoneMinder

          Monitor-Online:
            type: MinMaxThreshold
            minval: 1
            maxval: 1
            enabled: true
            dsnames:
             - Monitor_online
            severity: 3
            eventClass: /Status/ZoneMinder

        graphs:
          DEFAULTS:
            miny: 0
          ZM Monitor Framerate:
            units: frames/sec
            graphpoints:
              Capture FPS:
                dpName: Monitor_CaptureFPS
                lineType: AREA
                lineWidth: 2
                stacked: true
                colorindex: 0
              Analysis FPS:
                dpName: Monitor_AnalysisFPS
                lineType: LINE
                lineWidth: 2
                colorindex: 1

          ZM Monitor Bandwidth:
            units: bits/sec
            base: true
            graphpoints:
              Capturing:
                dpName: Monitor_CaptureBandwidth
                rpn: 8,*
                lineType: AREA
                stacked: true
                colorindex: 0

          ZM Monitor Events:
            units: events/min
            graphpoints:
              Events:
                dpName: Monitor_events
                rpn: CEIL
                lineType: LINE
                lineWidth: 2
                colorindex: 0


      ZoneMinderStorage:
        targetPythonClass: ZenPacks.daviswr.ZoneMinder.ZMStorage

        datasources:
          Storage:
            type: Python
            plugin_classname: ZenPacks.daviswr.ZoneMinder.dsplugins.Storage
            cycletime: 300
            datapoints:
              used: GAUGE
              total: GAUGE
              events: GAUGE
              percent: GAUGE

        graphs:
          DEFAULTS:
            miny: 0
          ZM Storage Percentage:
            units: percentage
            maxy: 100
            graphpoints:
              Used:
                dpName: Storage_percent
                lineType: AREA
                stacked: true
                colorindex: 0

          ZM Storage Detail:
            units: bytes
            base: true
            graphpoints:
              Used:
                dpName: Storage_used
                lineType: AREA
                stacked: true
                colorindex: 0
              Available:
                dpName: Storage_total
                rpn: Used,-
                lineType: AREA
                stacked: TRUE
                color: cccccc
              Events:
                dpName: Storage_events
                lineType: LINE
                lineWidth: 2
                stacked: false
                colorindex: 1


event_classes:
  /Status/ZoneMinder:
    remove: true
    description: ZoneMinder events
    transform: |-
      from zenoss.protocols.protobufs.zep_pb2 import (
          SEVERITY_CLEAR,
          SEVERITY_WARNING,
          SEVERITY_ERROR
          )

      current = int(float(evt.current))
      states = {
          0: 'is not running',
          1: 'is running',
          }
      state = states.get(current, 'status is unknown')

      severities = dict()

      if evt.eventKey.endswith('Daemon-Status'):
          evt.summary = 'ZoneMinder daemon {0}'.format(state)
          severities = {
              0: SEVERITY_ERROR,
              1: SEVERITY_CLEAR,
              }

      elif evt.eventKey.endswith('Daemon-RunState'):
          # Run State has changed, remodel to get new monitor functions
          # Model in background so transform isn't delayed
          device.collectDevice(background=True)
          evt._action = 'history'

      elif 'Monitor' in evt.eventKey:
          monitor_id = evt.component.replace('zmMonitor', '')
          severities = {
              0: SEVERITY_WARNING,
              1: SEVERITY_CLEAR,
              }
          if 'Status' in evt.eventKey:
              evt.summary = 'ZM monitor {0} process {1}'.format(monitor_id, state)
          elif 'Online' in evt.eventKey:
              online_map = {
                  0: 'is offline',
                  1: 'is online',
                  }
              online = online_map.get(current, 'reachability unknown')
              evt.summary = 'ZM monitor {0} {1}'.format(monitor_id, online)
          elif 'Enabled' in evt.eventKey:
              enabled_map = {
                  0: 'disabled',
                  1: 'enabled',
                  }
              enabled = enabled_map.get(current, 'unknown')
              evt.summary = 'ZM monitor {0} is {1}'.format(monitor_id, enabled)

              @transact
              def updateDb():
                  component.Enabled = True if 1 == current else False
              updateDb()

      if ('Daemon-RunState' not in evt.eventKey
              and 'Daemon-Capturing' not in evt.eventKey):
          # ZPL Components look for events in /Status rather than
          # /Status/ClassName to determine up/down status
          evt.eventClass = '/Status'
          if evt.severity != SEVERITY_CLEAR:
              evt.severity = severities.get(current, SEVERITY_WARNING)
